name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    name: Frontend (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix: { node: [18, 20, 22] }

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        working-directory: frontend
        run: npm ci
      - name: Lint
        working-directory: frontend
        run: npm run lint
      - name: Unit tests (Vitest)
        working-directory: frontend
        run: npm run test -- --run
      - name: Coverage (Vitest)
        if: always()
        working-directory: frontend
        run: npm run test:coverage
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-${{ matrix.node }}
          path: frontend/coverage

  backend:
    name: Backend (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    needs: frontend
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20, 22]

    # Start Mongo for tests
    services:
      mongo:
        image: mongo:7
        ports: ["27017:27017"]
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      NODE_ENV: test
      MONGO_URL: mongodb://localhost:27017/jobtracker_test

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Debug workspace
        run: |
          pwd
          ls -la

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Unit tests (Jest)
        run: npm test -- --runInBand

      - name: Coverage (Jest)
        if: always()
        run: npm run test:ci --if-present

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-${{ matrix.node }}
          path: coverage